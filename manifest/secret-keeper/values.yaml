platform:
  imageRegistry: cr-cn-beijing.volces.com
  imageRepository: sailor-moon
  mongodb_address: mongodb://mongo-0.mongo.sailor-moon,mongo-1.mongo.sailor-moon,mongo-2.mongo.sailor-moon/?replicaSet=rs0
image:
  name: secret-keeper-backend
  pullPolicy: Always
  tag: latest
server:
  metadata:
    labels: { }
    annotations: { }
    podLabels: { }
    podAnnotations:
      prometheus.io/path: "/metrics"
      prometheus.io/port: "8081"
      prometheus.io/scrape: "true"
  extraArgs: { }
  replicas: 3
  resources:
    limits:
      cpu: "1"
      memory: 1Gi
    requests:
      cpu: "1"
      memory: 512Mi
  affinity: { }
  nodeSelector: { }
  tolerations: [ ]
  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  service:
    type: ClusterIP
    http:
      port: 8080
      nodePort:
    telemetry:
      port: 8081
      nodePort:
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    annotations: { }
    labels: { }
queue:
  metadata:
    labels: { }
    annotations: { }
    podLabels: { }
    podAnnotations:
      prometheus.io/path: "/metrics"
      prometheus.io/port: "8081"
      prometheus.io/scrape: "true"
  extraArgs: { }
  replicas: 1
  resources:
    limits:
      cpu: "1"
      memory: 4Gi
    requests:
      cpu: "1"
      memory: 2Gi
  affinity: { }
  nodeSelector: { }
  tolerations: [ ]
  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  service:
    type: ClusterIP
    http:
      port: 8080
      nodePort:
    telemetry:
      port: 8081
      nodePort:
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    annotations: { }
    labels: { }
